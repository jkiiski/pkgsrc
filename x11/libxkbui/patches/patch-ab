$NetBSD$

Follow patch-aa's lead.

--- configure.orig	Wed Apr 26 20:00:02 2006
+++ configure
@@ -3601,7 +3601,7 @@ linux*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-netbsd*)
+netbsd* | minix*)
   if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
   else
@@ -5507,7 +5507,7 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
-  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly* | minix*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
       lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
@@ -7012,7 +7012,7 @@ EOF
       fi
       ;;
 
-    netbsd*)
+    netbsd* | minix*)
       if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
 	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
 	wlarc=
@@ -7546,7 +7546,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:
       link_all_deplibs=yes
       ;;
 
-    netbsd*)
+    netbsd* | minix*)
       if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
 	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
       else
@@ -8265,7 +8265,7 @@ knetbsd*-gnu)
   dynamic_linker='GNU ld.so'
   ;;
 
-netbsd*)
+netbsd* | minix*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
@@ -10796,7 +10796,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:
 	;;
     esac
     ;;
-  netbsd*)
+  netbsd* | minix*)
     if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
       archive_cmds_CXX='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'
       wlarc=
@@ -11449,7 +11449,7 @@ echo $ECHO_N "checking for $compiler option to produce
 	    ;;
 	esac
 	;;
-      netbsd*)
+      netbsd* | minix*)
 	;;
       osf3* | osf4* | osf5*)
 	case $cc_basename in
@@ -12242,7 +12242,7 @@ knetbsd*-gnu)
   dynamic_linker='GNU ld.so'
   ;;
 
-netbsd*)
+netbsd* | minix*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
@@ -13617,7 +13617,7 @@ EOF
       fi
       ;;
 
-    netbsd*)
+    netbsd* | minix*)
       if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
 	archive_cmds_F77='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
 	wlarc=
@@ -14131,7 +14131,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:
       link_all_deplibs_F77=yes
       ;;
 
-    netbsd*)
+    netbsd* | minix*)
       if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
 	archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
       else
@@ -14850,7 +14850,7 @@ knetbsd*-gnu)
   dynamic_linker='GNU ld.so'
   ;;
 
-netbsd*)
+netbsd* | minix*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
@@ -16213,7 +16213,7 @@ EOF
       fi
       ;;
 
-    netbsd*)
+    netbsd* | minix*)
       if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
 	archive_cmds_GCJ='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
 	wlarc=
@@ -16747,7 +16747,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:
       link_all_deplibs_GCJ=yes
       ;;
 
-    netbsd*)
+    netbsd* | minix*)
       if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
 	archive_cmds_GCJ='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
       else
@@ -17466,7 +17466,7 @@ knetbsd*-gnu)
   dynamic_linker='GNU ld.so'
   ;;
 
-netbsd*)
+netbsd* | minix*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
@@ -18758,12 +18758,12 @@ if test -n "$PKG_CONFIG"; then
         pkg_cv_XKBUI_CFLAGS="$XKBUI_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"x11 xt xkbfile\"") >&5
-  ($PKG_CONFIG --exists --print-errors "x11 xt xkbfile") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"x11 xkbfile\"") >&5
+  ($PKG_CONFIG --exists --print-errors "x11 xkbfile") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_XKBUI_CFLAGS=`$PKG_CONFIG --cflags "x11 xt xkbfile" 2>/dev/null`
+  pkg_cv_XKBUI_CFLAGS=`$PKG_CONFIG --cflags "x11 xkbfile" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -18776,12 +18776,12 @@ if test -n "$PKG_CONFIG"; then
         pkg_cv_XKBUI_LIBS="$XKBUI_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"x11 xt xkbfile\"") >&5
-  ($PKG_CONFIG --exists --print-errors "x11 xt xkbfile") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"x11 xkbfile\"") >&5
+  ($PKG_CONFIG --exists --print-errors "x11 xkbfile") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_XKBUI_LIBS=`$PKG_CONFIG --libs "x11 xt xkbfile" 2>/dev/null`
+  pkg_cv_XKBUI_LIBS=`$PKG_CONFIG --libs "x11 xkbfile" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -18800,14 +18800,14 @@ else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        XKBUI_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "x11 xt xkbfile"`
+	        XKBUI_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "x11 xkbfile"`
         else
-	        XKBUI_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "x11 xt xkbfile"`
+	        XKBUI_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "x11 xkbfile"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$XKBUI_PKG_ERRORS" >&5
 
-	{ { echo "$as_me:$LINENO: error: Package requirements (x11 xt xkbfile) were not met:
+	{ { echo "$as_me:$LINENO: error: Package requirements (x11 xkbfile) were not met:
 
 $XKBUI_PKG_ERRORS
 
@@ -18818,7 +18818,7 @@ Alternatively, you may set the environment variables X
 and XKBUI_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.
 " >&5
-echo "$as_me: error: Package requirements (x11 xt xkbfile) were not met:
+echo "$as_me: error: Package requirements (x11 xkbfile) were not met:
 
 $XKBUI_PKG_ERRORS
 
